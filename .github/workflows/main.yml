name: Assigne API

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
        
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3

    - name: Install necessary packages
      run: |
        pip install "fastapi[all]" sqlalchemy pytest

    - name: Create env file
      run: |
        touch .env
        echo APPLICATION_ENV=${{ secrets.APPLICATION_ENV_LOCAL_TEST }} >> .env
        echo TEST_DATABASE_URL=${{ secrets.TEST_DATABASE_URL }} >> .env
      
    - name: UnitTest with pytest
      run: |
        pytest
      
    - name: Create env file
      run: |
        touch .env
        echo DB_USER=${{ secrets.DB_USER }} >> .env
        echo DB_PASS=${{ secrets.DB_PASS }} >> .env
        echo DB_NAME=${{ secrets.DB_NAME }} >> .env
        echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env
        echo PGADMIN_EMAIL=${{ secrets.PGADMIN_EMAIL }} >> .env
        echo PGADMIN_PASS=${{ secrets.PGADMIN_PASS }} >> .env
        echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
        echo ALGORITHM=${{ secrets.ALGORITHM  }} >> .env
        echo DB_PORT=${{ secrets.DB_PORT }} >> .env
        echo APPLICATION_ENV=${{ secrets.APPLICATION_ENV }} >> .env

    - name: Set up Docker Compose        
      run: |
          sudo sed -i 's/azure\.//' /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y docker-compose
          sudo docker-compose --version

    - name: Build and run Docker containers
      run: |
          sudo docker-compose up -d --build

    - name: Wait for containers to start
      run: |
          sleep 10

    - name: Run Alembic migration
      run: |
          sudo docker-compose run web alembic upgrade head
